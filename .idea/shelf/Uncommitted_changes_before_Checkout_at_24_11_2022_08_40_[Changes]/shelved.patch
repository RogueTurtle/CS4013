Index: src/main/java/com/cs4013/Account.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs4013;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Account {\r\n\r\n    private int restaurantID;\r\n    private String name;\r\n    private String password;\r\n    private String phoneNum;\r\n    private String authority;\r\n    private String customerID;\r\n    private Scanner scanner = new Scanner(System.in);\r\n    private File accounts = new File(\"src/storage/accounts.csv\");\r\n    private HubInterface mainHub;\r\n\r\n    /** Constructor for Account.\r\n     *\r\n     * @param mainHub Used to direct to MainHub at some point in the program.\r\n     * @param restaurantID The restaurant ID to be set for future use.\r\n     * @throws FileNotFoundException\r\n     */\r\n    public Account (HubInterface mainHub, int restaurantID) throws FileNotFoundException {\r\n        this.mainHub = mainHub;\r\n        this.restaurantID = restaurantID;\r\n    }\r\n\r\n    /**\r\n     * Prompts the user with questions required to log them into their account.\r\n     */\r\n    public void login () {\r\n\r\n        // prompt them with \"Username: \", check that username exists in accounts.csv\r\n        // if exists, prompt password and check that password matches.\r\n        // if matches, set this object's details to the details in the csv\r\n        int nameLine;\r\n        String username = \"\";\r\n        String[] information;\r\n\r\n        do {\r\n            System.out.println(\"LOG-IN\\n\" + \"------------------\");\r\n            username = prompt(\"Username: \");\r\n            nameLine = checkNameExists(username);\r\n            if (nameLine >= 0) {\r\n                break;\r\n            }\r\n            System.out.printf(\"Username \\\"%s\\\" is invalid. Please try again.\\n\", username);\r\n        } while (true);\r\n        information = comparePassword(username, nameLine);\r\n        loginSuccess(information);\r\n\r\n    }\r\n\r\n    /** Checks whether a username is already taken on the system.\r\n     *\r\n     * @param username Inputted username.\r\n     * @return An integer value used to determine either a false value (name doesn't exist),\r\n     * or a positive value that indicates the line the name exists on.\r\n     */\r\n    private int checkNameExists (String username) {\r\n\r\n        int i = 0;\r\n        String[] line;\r\n\r\n        try (FileReader fileRead = new FileReader(accounts);\r\n             BufferedReader bufferRead = new BufferedReader(fileRead)) {\r\n            bufferRead.readLine();\r\n            while (bufferRead.ready()) {\r\n                i++;\r\n                line = bufferRead.readLine().split(\",\");\r\n                if (username.equalsIgnoreCase(line[0])) {\r\n                    return i;\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return -1;\r\n\r\n    }\r\n\r\n\r\n    /** Checks the stored password for a username and prompts the user to\r\n     * correctly input the password to proceed.\r\n     *\r\n     * @param username Inputted username.\r\n     * @param nameLine The line in the accounts.csv file the name is located.\r\n     * @return String array containing all relevant information about user.\r\n     */\r\n    private String[] comparePassword (String username, int nameLine) {\r\n\r\n        String line = \"\";\r\n        String[] information;\r\n\r\n        try (FileReader fileRead = new FileReader(accounts);\r\n             BufferedReader bufferRead = new BufferedReader(fileRead)) {\r\n            bufferRead.readLine();\r\n            for (int i = 0; i < nameLine - 1; i++) {\r\n                bufferRead.readLine();\r\n            }\r\n            line = bufferRead.readLine();\r\n            information = line.split(\",\");\r\n            while (true) {\r\n                line = prompt(\"Password: \");\r\n                if (line.equals(information[1])) {\r\n                    return information;\r\n                }\r\n                System.out.println(\"--- Invalid password, please try again. ---\");\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return new String[]{\"unverified\"};\r\n    }\r\n\r\n    /** Sets account's values and directs user to the main hub.\r\n     *\r\n     * @param information A string array containing all details about user.\r\n     */\r\n    private void loginSuccess (String[] information) {\r\n\r\n        this.name = information[0];\r\n        this.password = information[1];\r\n        this.phoneNum = information[2];\r\n        this.authority = information[3];\r\n        this.customerID = (information[0] + \"_\" + information[2]);\r\n\r\n        mainHub.options(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * Prompts the user with multiple questions and uses information from responses\r\n     * to add a new account to the system.\r\n     */\r\n    public void signUp () {\r\n\r\n        String username = validateUsername();\r\n        String phoneNum = validatePhoneNumber();\r\n        String password = validatePassword();\r\n        addAccount(username, password, phoneNum);\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param username Username of new account.\r\n     * @param password Password of new account.\r\n     * @param phoneNum Phone number of new account.\r\n     */\r\n    private void addAccount (String username, String password, String phoneNum) {\r\n\r\n        String csvLine = String.format(\"%s,%s,%s,CUSTOMER,%s_%s\", username, password, phoneNum, username, phoneNum);\r\n\r\n        try (FileWriter fileWrite = new FileWriter(accounts, true)) {\r\n            fileWrite.write(\"\\n\" + csvLine);\r\n            System.out.println(csvLine);\r\n            String[] information = { username, password, phoneNum, \"CUSTOMER\" };\r\n            loginSuccess(information);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    /** Validates whether a username is acceptable.\r\n     *\r\n     * @return Valid username.\r\n     */\r\n    private String validateUsername () {\r\n\r\n        String username = \"\";\r\n        String[] line;\r\n        boolean taken = false;\r\n\r\n        try (FileReader fileRead = new FileReader(accounts);\r\n             BufferedReader bufferRead = new BufferedReader(fileRead)) {\r\n            bufferRead.readLine();\r\n            while (true) {\r\n                System.out.println(\"SIGN-UP\\n\" + \"------------------\");\r\n                username = prompt(\"Username (3-20 characters): \").toLowerCase();\r\n                if (username.length() < 3 || username.length() > 20) {\r\n                    System.out.println(\"--- Invalid username, please try again. ---\");\r\n                    continue;\r\n                }\r\n                if (checkNameExists(username) == -1) {\r\n                    return username;\r\n                }\r\n                System.out.println(\"--- Username already taken, please try again. ---\");\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n\r\n    /** Validates whether a password is acceptable.\r\n     *\r\n     * @return Valid password.\r\n     */\r\n    private String validatePassword () {\r\n\r\n        String password = \"\";\r\n\r\n        while (true) {\r\n            password = prompt(\"\"\"\r\n                Password must contain at least:\r\n                - 8 characters.\r\n                - 1 lowercase letter.\r\n                - 1 uppercase letter.\r\n                - 1 number.\r\n                \r\n                Enter password:\\040\"\"\");\r\n            if (Pattern.matches(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(.+){8,}$\", password)) {\r\n                return password;\r\n            }\r\n            System.out.println(\"--- Invalid password, please try again. ---\");\r\n        }\r\n\r\n    }\r\n\r\n    /** Validates whether a phone number is acceptable.\r\n     *\r\n     * @return Valid phone number.\r\n     */\r\n    private String validatePhoneNumber () {\r\n\r\n        String phoneNum = \"\";\r\n\r\n        while (true) {\r\n            phoneNum = prompt(\"Phone number (used for reservations): \").replaceAll(\" \", \"\");\r\n            try {\r\n                Long validPhoneNumber = Long.parseLong(phoneNum);\r\n                return phoneNum;\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"--- Invalid phone number, please enter digits only. ---\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /** Promotes a user's authority level (can only be called by OWNER).\r\n     *\r\n     * @param username Username of user to be promoted.\r\n     * @param promotion Level to promote user to (\"CHEF\", \"FRONT_STAFF\", \"OWNER\")\r\n     * @return\r\n     */\r\n    private boolean promoteUser (String username, String promotion) {\r\n        return true;\r\n    }\r\n\r\n    /** Prompts the user with a question and returns a trimmed string input.\r\n     *\r\n     * @param prompt A question to prompt the user.\r\n     * @return A trimmed string inputted by the user.\r\n     */\r\n    private String prompt (String prompt) {\r\n        System.out.print(prompt);\r\n        return scanner.nextLine().trim();\r\n    }\r\n\r\n    /** Returns the current username.\r\n     *\r\n     * @return The current username.\r\n     */\r\n    public String getName () {\r\n        return name;\r\n    }\r\n\r\n    /** Returns the current password.\r\n     *\r\n     * @return The current password.\r\n     */\r\n    public String getPassword () {\r\n        return password;\r\n    }\r\n\r\n    /** Returns the current phone number.\r\n     *\r\n     * @return The current phone number.\r\n     */\r\n    public String getPhoneNum () {\r\n        return phoneNum;\r\n    }\r\n\r\n    /** Returns the current authority level.\r\n     *\r\n     * @return The current authority level.\r\n     */\r\n    public String getAuthority () {\r\n        return authority;\r\n    }\r\n\r\n    /** Returns the current customerID.\r\n     *\r\n     * @return The current customerID.\r\n     */\r\n    public String getCustomerID() {\r\n        return customerID;\r\n    }\r\n\r\n    /** Returns the current restaurant ID.\r\n     *\r\n     * @return The current restaurant ID.\r\n     */\r\n    public int getRestaurantID () {\r\n        return restaurantID;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/cs4013/Account.java b/src/main/java/com/cs4013/Account.java
--- a/src/main/java/com/cs4013/Account.java	
+++ b/src/main/java/com/cs4013/Account.java	
@@ -127,7 +127,7 @@
         this.authority = information[3];
         this.customerID = (information[0] + "_" + information[2]);
 
-        mainHub.options(this);
+        mainHub.options();
 
     }
 
Index: src/main/java/com/cs4013/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs4013;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.util.ArrayList;\r\n\r\npublic class Menu  {\r\n\r\n    private File menu = new File(\"src/storage/menus.csv\");\r\n    private Account account;\r\n    private HubInterface mainHub;\r\n\r\n    public Menu (Account account, HubInterface mainHub) {\r\n        this.account = account;\r\n        this.mainHub = mainHub;\r\n    }\r\n\r\n    public void printMenu () {\r\n\r\n        String line = \"\";\r\n        String lineRestaurant = \"\";\r\n        String[] lineArray = new String[0];\r\n        ArrayList<String> currentReservations = new ArrayList<>();\r\n\r\n        try (FileReader fileRead = new FileReader(menu);\r\n             BufferedReader bufferRead = new BufferedReader(fileRead);) {\r\n            bufferRead.readLine();\r\n            while (bufferRead.ready()) {\r\n                line = bufferRead.readLine();\r\n                lineRestaurant = line.substring(0, line.indexOf(\",\"));\r\n                if (Integer.parseInt(lineRestaurant) == (account.getRestaurantID())) {\r\n                    System.out.println(line);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        System.out.println();\r\n        mainHub.options(account);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/cs4013/Menu.java b/src/main/java/com/cs4013/Menu.java
--- a/src/main/java/com/cs4013/Menu.java	
+++ b/src/main/java/com/cs4013/Menu.java	
@@ -37,7 +37,7 @@
             e.printStackTrace();
         }
         System.out.println();
-        mainHub.options(account);
+        mainHub.options();
 
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0d69447a-bd0d-4621-b07b-90ae5f678353\" name=\"Changes\" comment=\"Alternative version of project.&#10;Account,Menu and Order classes replaced.&#10;Main, Admin, MainHubInterface, Reservations classes added.&#10;HubInterface interface added.&#10;menus.csv, accounts.csv files added.&#10;reservations.csv refactored and edited.&#10;tables.csv refactored.\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/project.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/project.iml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/main\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HjuViWeoNUzX6wgjnWKLr0GU04\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"create.test.in.the.same.root\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../untitled6\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"com.cs4013\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Account\">\r\n    <configuration name=\"Account\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.cs4013.Account\" />\r\n      <module name=\"project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.cs4013.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Login\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.cs4013.Login\" />\r\n      <module name=\"project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.cs4013.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MenuTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.cs4013.MenuTest\" />\r\n      <module name=\"project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.cs4013.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Account\" />\r\n        <item itemvalue=\"Application.MenuTest\" />\r\n        <item itemvalue=\"Application.Login\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0d69447a-bd0d-4621-b07b-90ae5f678353\" name=\"Changes\" comment=\"\" />\r\n      <created>1668810846711</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1668810846711</updated>\r\n      <workItem from=\"1668810857132\" duration=\"370000\" />\r\n      <workItem from=\"1668811248532\" duration=\"172000\" />\r\n      <workItem from=\"1668874659100\" duration=\"8552000\" />\r\n      <workItem from=\"1668893895398\" duration=\"9000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Removed redundant line of code from Account.java (set loggedIn to false when it is already false).\">\r\n      <created>1669050891141</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669050891141</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Removed redundant catch exception from Account.java (tried to catch FileNotFoundException and an IOException. FileNotFoundException is a subclass of IOException and they both called the same code so you can just catch IOException instead).\">\r\n      <created>1669051148326</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669051148326</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Removed redundant catch exception from Account.java (tried to catch FileNotFoundException and an IOException. FileNotFoundException is a subclass of IOException and they both called the same code so you can just catch IOException instead).\">\r\n      <created>1669051656827</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669051656827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Removed redundant type check in Menu.java (the type is already checked in the Food constructor).\">\r\n      <created>1669054800282</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669054800282</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Removed redundant type check in Menu.java (the type is already checked in the Food constructor).\">\r\n      <created>1669203577294</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669203577294</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Alternative version of project.&#10;Account,Menu and Order classes replaced.&#10;Main, Admin, MainHubInterface, Reservations classes added.&#10;HubInterface interface added.&#10;menus.csv, accounts.csv files added.&#10;reservations.csv refactored and edited.&#10;tables.csv refactored.\">\r\n      <created>1669220841205</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669220841205</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Removed redundant line of code from Account.java (set loggedIn to false when it is already false).\" />\r\n    <MESSAGE value=\"Removed redundant exception from Account.java (tried to catch FileNotFoundException and an IOException. FileNotFoundException is a subclass of IOException and they both called the same code so you can just catch IOException instead).\" />\r\n    <MESSAGE value=\"Removed redundant catch exception from Account.java (tried to catch FileNotFoundException and an IOException. FileNotFoundException is a subclass of IOException and they both called the same code so you can just catch IOException instead).\" />\r\n    <MESSAGE value=\"Removed redundant type check in Menu.java (the type is already checked in the Food constructor).\" />\r\n    <MESSAGE value=\"Alternative version of project.&#10;Account,Menu and Order classes replaced.&#10;Main, Admin, MainHubInterface, Reservations classes added.&#10;HubInterface interface added.&#10;menus.csv, accounts.csv files added.&#10;reservations.csv refactored and edited.&#10;tables.csv refactored.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Alternative version of project.&#10;Account,Menu and Order classes replaced.&#10;Main, Admin, MainHubInterface, Reservations classes added.&#10;HubInterface interface added.&#10;menus.csv, accounts.csv files added.&#10;reservations.csv refactored and edited.&#10;tables.csv refactored.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,12 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0d69447a-bd0d-4621-b07b-90ae5f678353" name="Changes" comment="Alternative version of project.&#10;Account,Menu and Order classes replaced.&#10;Main, Admin, MainHubInterface, Reservations classes added.&#10;HubInterface interface added.&#10;menus.csv, accounts.csv files added.&#10;reservations.csv refactored and edited.&#10;tables.csv refactored.">
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/project.iml" beforeDir="false" afterPath="$PROJECT_DIR$/project.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/cs4013/Account.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/cs4013/Account.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/cs4013/Customer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/cs4013/Customer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/cs4013/HubInterface.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/cs4013/HubInterface.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/cs4013/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/cs4013/Menu.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -174,7 +173,14 @@
       <option name="project" value="LOCAL" />
       <updated>1669220841205</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="Alternative version of project.&#10;Account,Menu and Order classes replaced.&#10;Main, Admin, MainHubInterface, Reservations classes added.&#10;HubInterface interface added.&#10;menus.csv, accounts.csv files added.&#10;reservations.csv refactored and edited.&#10;tables.csv refactored.">
+      <created>1669225808074</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1669225808074</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: src/main/java/com/cs4013/HubInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs4013;\r\n\r\npublic interface HubInterface {\r\n\r\n    public void options (Account account);\r\n\r\n}\r\n
===================================================================
diff --git a/src/main/java/com/cs4013/HubInterface.java b/src/main/java/com/cs4013/HubInterface.java
--- a/src/main/java/com/cs4013/HubInterface.java	
+++ b/src/main/java/com/cs4013/HubInterface.java	
@@ -2,6 +2,6 @@
 
 public interface HubInterface {
 
-    public void options (Account account);
+    public void options(Account account);
 
-}
+}
\ No newline at end of file
Index: src/main/java/com/cs4013/Customer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs4013;\r\n//adds and cancels reservation\r\n//view menu\r\n//create order\r\n//views bill\r\n//view tables\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Customer extends Person{\r\n\r\n    Reservation res = new Reservation();\r\n    Menu men = new Menu();\r\n    Customer(String name, int phoneNum) {\r\n        super(name, phoneNum);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Customer customer = new Customer(\"John\", 12345);\r\n        customer.addReservation(\"today\",5,1,\"now\",1);\r\n        customer.cancelation(12345);\r\n    }\r\n\r\n    public void addReservation(String date, int guestNum, int restId, String time, int tableId) {\r\n        res.addReservation(getName(), date, getPhoneNum(), guestNum, restId, time, tableId);\r\n    }\r\n\r\n    public void cancelation(int phoneNum) {\r\n        res.cancelation(phoneNum);\r\n    }\r\n\r\n    public void viewMenu() {\r\n        men.toString();\r\n    }\r\n\r\n    public void viewTables(int restId, String time, String date) {\r\n        res.tables(restId, time, date);\r\n    }\r\n\r\n    public Order order() {\r\n        Order order = new Order();\r\n        String quit = \"\";\r\n        Scanner scan = new Scanner(System.in);\r\n        String foodString = \"\";\r\n        while (quit!=\"q\" || quit!=\"Q\") {\r\n            System.out.println(\"Please enter the name of the food item you wish to order or Enter q to finish and exit \");\r\n            foodString = scan.nextLine();\r\n            if (foodString == \"q\" || foodString == \"Q\") {\r\n                quit = foodString;\r\n                scan.close();\r\n            } else {\r\n                order.addFood(foodString);\r\n            }\r\n        }\r\n        return order;\r\n    }\r\n\r\n    public void getBill(String paymentMethod) {\r\n        Bill bill = new Bill(order(), paymentMethod);\r\n        bill.getReceipt();\r\n    }\r\n\r\n    @Override\r\n    public String getName() {\r\n        return super.getName();\r\n    }\r\n    public int getPhoneNum() {\r\n        return super.getPhoneNum();\r\n    }\r\n}
===================================================================
diff --git a/src/main/java/com/cs4013/Customer.java b/src/main/java/com/cs4013/Customer.java
--- a/src/main/java/com/cs4013/Customer.java	
+++ b/src/main/java/com/cs4013/Customer.java	
@@ -38,7 +38,7 @@
     }
 
     public Order order() {
-        Order order = new Order();
+        Order order = new Order(men);
         String quit = "";
         Scanner scan = new Scanner(System.in);
         String foodString = "";
